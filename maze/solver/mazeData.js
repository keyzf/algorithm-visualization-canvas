const mazeStr = '101 101\n' +
  '#####################################################################################################\n' +
  '                                    #     #     #   #     # # #               # # # # #   #   #   # #\n' +
  '# # # ### # ############# ### # ##### ##### ##### ### ##### # # ####### ####### # # # # ### ### ### #\n' +
  '# # #   # #       #   # #   # # #       # #   # #         #           # # #               # # # # # #\n' +
  '### # # ### ####### ### ######### ####### # ### # ######### ### ######### # ############### # # # # #\n' +
  '#   # # #           # #   #   # #                   # #   # # # # # # # #     # # #     #           #\n' +
  '### ####### # # # ### # ### ### # ### ##### ######### # ### # ### # # # # ##### # # ##### ###########\n' +
  '#         # # # #       #   # #     #     #         # #         # #   #       # # # # # #     # #   #\n' +
  '# # # ####### ### ### ### ### # ##### ############### # ##### ### # ### ####### # # # # # ##### # ###\n' +
  '# # #   # #   #     #   #   #       #   #   # # # # #     # #             # # # # #   # #     #   # #\n' +
  '### # ### ### ### ### ### ### ########### ### # # # # ##### ### ### # # ### # # # # ### # ####### # #\n' +
  '#   # # #       # #       #                             # #   # # # # #               # #     #   # #\n' +
  '# # ### ### # ### ### # ### ##### # # ####### # # # ##### # ##### ######### # # # # ### # ####### # #\n' +
  '# #       # #   # #   #         # # #       # # # # # # #                 # # # # #         # # #   #\n' +
  '# # # ### # # ####### # # # ##### ### # # ####### ### # # ### ### ##### # ######### # # # ### # # ###\n' +
  '# # #   # # #   #     # # #     #   # # #     # #           #   #     # #     #     # # #           #\n' +
  '# ### ####### ##### # # # # ######### ### # ### ####### # ######### ##### ####### # # # # ### # # # #\n' +
  '# #       #       # # # # #       #     # #           # #         #     #   #     # # # #   # # # # #\n' +
  '# # # # # # # # # ### ##### # ####### ##### # ### # ##### # ####### ########### # ##### # ######### #\n' +
  '# # # # # # # # #   #     # #     # #     # #   # #   # # #     #           #   #     # #       #   #\n' +
  '# # ### # # ### # ### # ### # # ### ######### # # # ### ######### # ############# # # ### ######### #\n' +
  '# #   # # # #   # #   #   # # #             # # # #             # # # # # #   # # # #   #         # #\n' +
  '# # # # # ##### # # # ##### # ### # # ### # # ##### # ### # ######### # # ### # ##### # # # # # ### #\n' +
  '# # # # # #     # # #     # #   # # #   # # #     # #   # #       # # # #   #       # # # # # # # # #\n' +
  '# # # # ##### # # # # # ### # # # ### ####### # ### # ### # # # ### # # # ### ####### # ### ##### ###\n' +
  '# # # # #     # # # # #   # # # #   #       # #   # # # # # # #                     # #   # # # # # #\n' +
  '# ##### ### # # ##### # ### ### # ########### ######### ### ####### # # # # ##### ##### ##### # # # #\n' +
  '#   # # #   # #     # #   # # # #       # # #             # # #   # # # # #     #     #   #         #\n' +
  '# ### ##### ### ##### # ##### ### # # ### # ####### # # ##### # ##### # ### # ### ##### ### ### # # #\n' +
  '# #         #       # #         # # #             # # #     #       # #   # #   # #   #       # # # #\n' +
  '### ####### ### # ################### ### ####### ####### ### ### # # # # # # ##### ##### # #########\n' +
  '#   #         # #                   #   #       #       #       # # # # # # #           # #   #     #\n' +
  '# # ####### ##### # # ### # # # # ### ### ### ##### # ##### # ############### # ### # ### # ### #####\n' +
  '# #   #         # # #   # # # # # #     #   #     # #     # #   # # # #   # # #   # # #   #         #\n' +
  '# # ####### ######### ##### # ### # # ### # # # ##### # ### # ### # # # ### ### # ##### # # # # # # #\n' +
  '# # # #         #         # #   # # #   # # # #     # #   # #                 # #     # # # # # # # #\n' +
  '##### ##### # ##### # # # # # # ##### ##### ### ##### # ##### # # # # ################# ### ####### #\n' +
  '#           #   #   # # # # # #     #     #   #     # #     # # # # #           #     #   #       # #\n' +
  '### ### # # # ### # ####### ##### ### # ##### # # ##### # # # # # ### ##### ##### ##### ### # ### ###\n' +
  '# # #   # # #   # #       #     # #   #     # # #   #   # # # # # #       #           #   # #   #   #\n' +
  '# ##### ##### ### # # ##### # ##### # # # ##### # ##### # # ######### # ##### # ####### ### # ##### #\n' +
  '#         #     # # #     # #     # # # #     # #     # # #     #     #     # #       #   # #     # #\n' +
  '# ### # ##### ####### ####### ################# # ####### # ######### # # ##### # ############# #####\n' +
  '# #   # #       #           # # # #         # # #       # #     #     # #     # #       #     # # # #\n' +
  '# ### ### # # # # # # ##### ### # # ### # ### ### # # ##### ##### ### ### ############### ####### # #\n' +
  '# #     # # # # # # #     #           # #       # # #   # #   # # #     #         #     #     # #   #\n' +
  '# ### ####### ### # ####### ### # ####### # ######### ### ##### ##### ############# ##### ##### # ###\n' +
  '# #   # # #     # #       #   # #     # # #         #             #             #           # #     #\n' +
  '# ##### # ### ##### ### ### ##### # ### ### ##### # # # # # # # ##### # # # # ### ########### # #####\n' +
  '# #               #   # #       # #   # # #     # # # # # # # #     # # # # #         #             #\n' +
  '# ##### # # # # # # ####### # ##### ### # ##################### # # ########### # ##### ### ### # ###\n' +
  '# # #   # # # # # #     #   #   #               # # # # # #   # # #           # #     #   #   # #   #\n' +
  '### ### ### ### # # # ### # # # ### # # # ####### # # # # # ########### # # # ### # ### ### ##### # #\n' +
  '#       #     # # # #   # # # # #   # # #         #   # #       #     # # # #   # #       #   #   # #\n' +
  '####### ### # ### ####### ##### # # # ### # # ##### ### # ####### ####### # # ### # # # ########### #\n' +
  '#         # # #     #   #     # # # # #   # #         #     # #     #   # # #   # # # #     #   # # #\n' +
  '####### ### # ### ### ### # ####### # # # # # # ### ### ##### # ##### ####### ### # # # ####### # ###\n' +
  '#   #     # # #         # # #   #   # # # # # #   # #               # # #   #   # # # #   # # #     #\n' +
  '### ### ######### # # ####### ##### # # # ##### ##### ### # # # ##### # # ### ######### ### # # #####\n' +
  '#             #   # #     # #   #   # # # #             # # # #   #         #   # # # #       #     #\n' +
  '##### # # # # ### # # ##### # ##### ##### ### # ### # ####### ##### ### # ####### # # ### ##### #####\n' +
  '#     # # # #   # # #     # # #   # #       # #   # #       #         # #     #   #     # # # #     #\n' +
  '##### ####### # ### # ##### # # ####### # # ### ### # ### ### ### # ####### ##### # ####### # # ### #\n' +
  '#         #   #   # #                 # # # #     # #   #   #   # # # # # #   # # #   # # #       # #\n' +
  '# # # # ##### ####### ### # # # ### ### # # # # # ################### # # ##### # # ### # # #########\n' +
  '# # # #     #     #     # # # #   #   # # # # # #     # #           # # # # # # #             # #   #\n' +
  '# ##### ##### ##### # ##### ### ########### # # # # ### # ### # ##### # # # # # # ####### ##### # ###\n' +
  '# #         #     # #     #   #     #     # # # # #         # #           #             #           #\n' +
  '# ##### # ########### # # # # # ##### ### # ### # # # # ######### # # # ### ### # ### ### ### # #####\n' +
  '# # #   #           # # # # # #         # # #   # # # #         # # # #       # #   # #     # #     #\n' +
  '### ### # ### # ############# # # # ########### # ### # # ### ##### # # # # ##### ### ### ##### #####\n' +
  '#       #   # #             # # # #   # #     # # #   # #   #     # # # # #     #   # # # # # #   # #\n' +
  '### # # # # ### # # # ##### ### ### ### # ##### ##### # # # ############### # ######### ### # ##### #\n' +
  '#   # # # #   # # # #     #   #   #           # #     # # #           #     # # # # # #             #\n' +
  '# # ### ########### # # ########### # # # # # ##### # # ### ##### ####### # ### # # # ### ### ##### #\n' +
  '# # #         # # # # #           # # # # # #   #   # #   #     #     #   #           # #   # #   # #\n' +
  '# # ### ### ### # ##### # # # ##### # ### ### ### # # # ##### # # # ##### # ### # ##### # ##### #####\n' +
  '# # #     # #       #   # # #     # #   #   # #   # # #     # # # #     # #   # #                 # #\n' +
  '# ##### ##### ### ##### ##### ##### ##### # # ### ### # # ####### # ##### # # ##### ### # # # ##### #\n' +
  '# #             #     #   #       #     # # # #     # # #     #   #     # # #     #   # # # #       #\n' +
  '# # # # # # # ### # ##### # # # ### ####### # # # # # ### ####### # ######### # # # ### ##### # # # #\n' +
  '# # # # # # #   # #     # # # #   #       # # # # # # #       #   #     # #   # # #   #     # # # # #\n' +
  '##### # # # ####### # ######### ### ####### # # ######### # # ### ####### ### # ######### ###########\n' +
  '#     # # #       # # # # # #     #     # # # #       #   # # #             # #         #     # #   #\n' +
  '# # ### ### # ##### ### # # ### ######### ##### # # ##### ####### # ### # ##### # ### ### # ### # ###\n' +
  '# # #   #   #     #         #       #         # # #   #       #   #   # #   #   #   #   # #         #\n' +
  '# ######### # ##### # # # ##### # ### ####### # # # ##### # ####### ##### ### # # ### ### # # # # ###\n' +
  '# #         #     # # # #     # #   #       # # # #   #   # #           #   # # # # #   # # # # #   #\n' +
  '### # ### # # ####### # # # ######### ############# ##### # ####### ##### # ### ### ######### # # # #\n' +
  '#   # #   # #     # # # # #                   # #       # #   #         # # #             #   # # # #\n' +
  '### ######### ##### ### ### # # ### # ######### ### # # ### # ### # # ### # ### # # ######### #######\n' +
  '#   #                 # #   # #   # #       #     # # #   # # #   # #   # # #   # #         #       #\n' +
  '############# ### # # # ### # # # ### ### ##### ################### ##### # ### ### ### # ### # # # #\n' +
  '#               # # # #   # # # #   #   #   # #   #   # # # #           # # #     #   # #   # # # # #\n' +
  '### # ##### # # # ##### ### # # # # # ####### # ### ### # # ### # # # ##### # # ### # # # # ### # # #\n' +
  '#   # #     # # # # # # #   # # # # #                         # # # #     # # #   # # # # #   # # # #\n' +
  '### ##### # # ##### # ##### # ### # # # # # # # ### # # # # ##### # # # ####### # ##### ### # ##### #\n' +
  '#   #     # #             # #   # # # # # # # #   # # # # #     # # # #     #   #     # #   #     # #\n' +
  '### # # # ### ####### ### # # ##### ##### # ### ####### # # # # ### # # # ##### # # ### ### # # # # #\n' +
  '#   # # # #         #   # # #     #     # # #         # # # # #   # # # #   #   # #   # #   # # # #  \n' +
  '#####################################################################################################\n';
let mazeArr = mazeStr.split("\n");
let lengths = mazeArr[0].split(" ");
let n = parseInt(lengths[0]), m = parseInt(lengths[1]);

class mazeData {
  constructor() {
    let maze = [], visited = [], result = [];
    mazeData.init(maze, visited, result);
    let d = {
      entryX: 0,
      entryY: 1,
      targetX: m - 1,
      targetY: n - 2,
      maze,
      visited,
      result,
      ROAD: " ",
      WALL: '#',
      direction: [[1, 0], [0, 1], [-1, 0], [0, -1]]
    };
    Object.assign(this, d);
  }

  static init(maze, visited, result) {
    for (let i = 0; i < n; i++) {
      maze[i] = [];
      visited[i] = [];
      result[i] = [];
      for (let j = 0; j < m; j++) {
        maze[i][j] = mazeArr[i + 1][j];
        visited[i][j] = false;
        result[i][j] = false;
      }
    }
  }

  inArea(x, y) {
    return x >= 0 && x < m && y >= 0 && y < n;
  }
}

class Position{
  constructor(x,y,prev){
    this.x = x;
    this.y = y;
    this.prev = prev;
  }
}

